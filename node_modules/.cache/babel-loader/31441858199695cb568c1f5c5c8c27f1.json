{"ast":null,"code":"import _ from 'lodash';\n\nvar data = require('../data/data.json');\n\nvar print = function print(x) {\n  return console.log(x);\n};\n\nvar accounts = Array.from(new Set(data.map(function (rec) {\n  return rec['Account'];\n})));\n\nvar filterForYear = function filterForYear(data, year) {\n  return _.filter(data, {\n    'Year': year\n  });\n};\n\nvar find_ly = function find_ly(data) {\n  var ytd_date = data[data.length - 1]['Date'].split(' ');\n  ytd_date[1] = (Number(ytd_date[1]) - 1).toString();\n  var ly_date = ytd_date.join(' ');\n\n  var ly = _.find(data, {\n    'Date': ly_date\n  });\n\n  return ly;\n};\n\nvar filterForAccount = function filterForAccount(data, account) {\n  return _.filter(data, {\n    'Account': account\n  });\n};\n\nvar searchData = function searchData(data, search) {\n  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Account';\n  // console.log('search', search)\n  return _.filter(data, function (x) {\n    var nrmlized = _.lowerCase(x[key]);\n\n    nrmlized = nrmlized.replace(/\\s+/g, '');\n    return nrmlized.includes(_.lowerCase(search));\n  });\n};\n\nexport { accounts, data, filterForYear, find_ly, filterForAccount, searchData };","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/functions/jsonParsers.js"],"names":["_","data","require","print","x","console","log","accounts","Array","from","Set","map","rec","filterForYear","year","filter","find_ly","ytd_date","length","split","Number","toString","ly_date","join","ly","find","filterForAccount","account","searchData","search","key","nrmlized","lowerCase","replace","includes"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;;AACA,IAAMC,IAAI,GAAGC,OAAO,CAAC,mBAAD,CAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,CAAD;AAAA,SAAOC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAP;AAAA,CAAd;;AAEA,IAAMG,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQT,IAAI,CAACU,GAAL,CAAS,UAAAC,GAAG;AAAA,SAAIA,GAAG,CAAC,SAAD,CAAP;AAAA,CAAZ,CAAR,CAAX,CAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACZ,IAAD,EAAOa,IAAP,EAAgB;AACpC,SAAOd,CAAC,CAACe,MAAF,CAASd,IAAT,EAAe;AAAE,YAAQa;AAAV,GAAf,CAAP;AACD,CAFD;;AAIA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACf,IAAD,EAAU;AACxB,MAAIgB,QAAQ,GAAGhB,IAAI,CAACA,IAAI,CAACiB,MAAL,GAAc,CAAf,CAAJ,CAAsB,MAAtB,EAA8BC,KAA9B,CAAoC,GAApC,CAAf;AACAF,EAAAA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAACG,MAAM,CAACH,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsB,CAAvB,EAA0BI,QAA1B,EAAd;AAEA,MAAIC,OAAO,GAAGL,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAd;;AACA,MAAIC,EAAE,GAAGxB,CAAC,CAACyB,IAAF,CAAOxB,IAAP,EAAa;AAAC,YAAQqB;AAAT,GAAb,CAAT;;AAEA,SAAOE,EAAP;AACD,CARD;;AAUA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACzB,IAAD,EAAO0B,OAAP,EAAmB;AAC1C,SAAO3B,CAAC,CAACe,MAAF,CAASd,IAAT,EAAe;AAAE,eAAW0B;AAAb,GAAf,CAAP;AACD,CAFD;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAC3B,IAAD,EAAO4B,MAAP,EAAiC;AAAA,MAAlBC,GAAkB,uEAAd,SAAc;AAClD;AACA,SAAO9B,CAAC,CAACe,MAAF,CAASd,IAAT,EAAe,UAAAG,CAAC,EAAI;AACzB,QAAI2B,QAAQ,GAAG/B,CAAC,CAACgC,SAAF,CAAY5B,CAAC,CAAC0B,GAAD,CAAb,CAAf;;AACAC,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,OAAT,CAAiB,MAAjB,EAAyB,EAAzB,CAAX;AACA,WAAOF,QAAQ,CAACG,QAAT,CAAkBlC,CAAC,CAACgC,SAAF,CAAYH,MAAZ,CAAlB,CAAP;AACD,GAJM,CAAP;AAKD,CAPD;;AAUA,SAAStB,QAAT,EAAmBN,IAAnB,EAAyBY,aAAzB,EAAwCG,OAAxC,EAAiDU,gBAAjD,EAAmEE,UAAnE","sourcesContent":["import _ from 'lodash';\nconst data = require('../data/data.json')\n\nconst print = (x) => console.log(x)\n\nconst accounts = Array.from(new Set(data.map(rec => rec['Account'])))\n\nconst filterForYear = (data, year) => {\n  return _.filter(data, { 'Year': year });\n}\n\nconst find_ly = (data) => {\n  let ytd_date = data[data.length - 1]['Date'].split(' ')\n  ytd_date[1] = (Number(ytd_date[1]) - 1).toString()\n\n  let ly_date = ytd_date.join(' ')\n  let ly = _.find(data, {'Date': ly_date})\n\n  return ly\n}\n\nconst filterForAccount = (data, account) => {\n  return _.filter(data, { 'Account': account });\n}\n\nconst searchData = (data, search, key='Account') => {\n  // console.log('search', search)\n  return _.filter(data, x => {\n    let nrmlized = _.lowerCase(x[key])\n    nrmlized = nrmlized.replace(/\\s+/g, '')\n    return nrmlized.includes(_.lowerCase(search))\n  })\n}\n\n\nexport { accounts, data, filterForYear, find_ly, filterForAccount, searchData };\n\n"]},"metadata":{},"sourceType":"module"}