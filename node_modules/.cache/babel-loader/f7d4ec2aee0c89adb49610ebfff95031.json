{"ast":null,"code":"var _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataPoints/OfficeVolume.js\";\nimport React from 'react';\nimport { DataBox } from '../DataBox/DataBox';\nimport { asUSD } from '../../../../functions/dataDisplayers';\nimport { calculatePercentChange } from '../../../../functions/dataMethods';\nimport Grid from '@material-ui/core/Grid';\nexport default function OfficeVolume(props) {\n  var thisMonth = props.thisMonth,\n      comparableMonth = props.comparableMonth,\n      period = props.period;\n  var differenceValue;\n  var captions = ['', ''];\n  var valueKey = period === 'YOY' ? 'YTD Office Volume' : 'Office Volume';\n\n  if (comparableMonth) {\n    captions = [thisMonth['Date'], comparableMonth['Date']];\n    differenceValue = (calculatePercentChange(valueKey, thisMonth, comparableMonth) * 100).toFixed(0).toString() + '%';\n\n    if (!differenceValue.includes('-')) {\n      differenceValue = '+' + differenceValue;\n    }\n  } else {\n    differenceValue = '';\n  }\n\n  console.log(captions);\n  return (\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(DataBox, {\n      title: 'Office Volume',\n      valueYTD: thisMonth[valueKey] ? asUSD(thisMonth[valueKey]) : '',\n      valueComp: comparableMonth[valueKey] ? asUSD(comparableMonth[valueKey]) : '',\n      differenceValue: differenceValue,\n      captions: captions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataPoints/OfficeVolume.js"],"names":["React","DataBox","asUSD","calculatePercentChange","Grid","OfficeVolume","props","thisMonth","comparableMonth","period","differenceValue","captions","valueKey","toFixed","toString","includes","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAT,QAAsB,sCAAtB;AACA,SAASC,sBAAT,QAAuC,mCAAvC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MAClCC,SADkC,GACKD,KADL,CAClCC,SADkC;AAAA,MACvBC,eADuB,GACKF,KADL,CACvBE,eADuB;AAAA,MACNC,MADM,GACKH,KADL,CACNG,MADM;AAG1C,MAAIC,eAAJ;AACA,MAAIC,QAAQ,GAAG,CAAC,EAAD,EAAK,EAAL,CAAf;AACA,MAAIC,QAAQ,GAAGH,MAAM,KAAK,KAAX,GAAmB,mBAAnB,GAAyC,eAAxD;;AAEA,MAAID,eAAJ,EAAqB;AACnBG,IAAAA,QAAQ,GAAG,CAACJ,SAAS,CAAC,MAAD,CAAV,EAAoBC,eAAe,CAAC,MAAD,CAAnC,CAAX;AACAE,IAAAA,eAAe,GAAG,CAChBP,sBAAsB,CAACS,QAAD,EAAWL,SAAX,EAAsBC,eAAtB,CAAtB,GAA+D,GAD/C,EAEfK,OAFe,CAEP,CAFO,EAGfC,QAHe,KAGF,GAHhB;;AAIA,QAAI,CAACJ,eAAe,CAACK,QAAhB,CAAyB,GAAzB,CAAL,EAAoC;AAClCL,MAAAA,eAAe,GAAG,MAAMA,eAAxB;AACD;AACF,GATD,MASO;AACLA,IAAAA,eAAe,GAAG,EAAlB;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA;AAAA;AACE,wBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,wBAAC,OAAD;AACE,MAAA,KAAK,EAAE,eADT;AAEE,MAAA,QAAQ,EAAEJ,SAAS,CAACK,QAAD,CAAT,GACRV,KAAK,CAACK,SAAS,CAACK,QAAD,CAAV,CADG,GACqB,EAHjC;AAKE,MAAA,SAAS,EAAEJ,eAAe,CAACI,QAAD,CAAf,GACTV,KAAK,CAACM,eAAe,CAACI,QAAD,CAAhB,CADI,GAC0B,EANvC;AAQE,MAAA,eAAe,EAAEF,eARnB;AASE,MAAA,QAAQ,EAAEC,QATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AADF;AAeD","sourcesContent":["import React from 'react';\nimport { DataBox } from '../DataBox/DataBox';\nimport { asUSD } from '../../../../functions/dataDisplayers';\nimport { calculatePercentChange } from '../../../../functions/dataMethods';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function OfficeVolume(props) {\n  const { thisMonth, comparableMonth, period } = props;\n\n  let differenceValue;\n  let captions = ['', ''];\n  let valueKey = period === 'YOY' ? 'YTD Office Volume' : 'Office Volume';\n\n  if (comparableMonth) {\n    captions = [thisMonth['Date'], comparableMonth['Date']];\n    differenceValue = (\n      calculatePercentChange(valueKey, thisMonth, comparableMonth) * 100)\n      .toFixed(0)\n      .toString() + '%';\n    if (!differenceValue.includes('-')) {\n      differenceValue = '+' + differenceValue;\n    }\n  } else {\n    differenceValue = '';\n  }\n  console.log(captions);\n  return (\n    <Grid item xs={6}>\n      <DataBox\n        title={'Office Volume'}\n        valueYTD={thisMonth[valueKey] ?\n          asUSD(thisMonth[valueKey]) : ''\n        }\n        valueComp={comparableMonth[valueKey] ?\n          asUSD(comparableMonth[valueKey]) : ''\n        }\n        differenceValue={differenceValue}\n        captions={captions}\n      />\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}