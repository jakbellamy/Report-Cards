{"ast":null,"code":"import _slicedToArray from \"/Users/jakobbellamy/Dev/refactor/Report-Cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { mainBackgroundColor, useStyles } from './styles';\nimport Page from '../src/components/Page';\nimport BoxDivider from './src/Components/_Modules/BoxDivider';\nimport NullBlock from './src/Components/_Modules/NullBlock';\nimport ReportCardHeader from './src/Components/Header/ReportCardHeader';\nimport GraphCard from './src/Components/_Modules/GraphCard';\nimport { searchData } from './functions/jsonParsers';\nimport MShareVolume from './src/Components/Data Components/DataBox/DataPoints/MShareVolume';\nimport OfficeVolume from './src/Components/Data Components/DataBox/DataPoints/OfficeVolume';\nimport UpcomingBest from './src/Components/Inustry Standards/upcomingBest';\nimport { ifExists } from './functions/conditionals';\nimport { firstStr, lastStr } from './functions/stringParsers';\nimport { Container, Grid, Box, CardHeader } from '@material-ui/core';\nimport ContinuingEducation from './src/Components/Continuing Education/ContinuingEducation_Deprecated';\nimport GoalDonuts from './src/Components/Data Components/Tabler Components/GoalDonuts';\nimport CSAT from './src/Components/Inustry Standards/csat';\nimport CenteredImage from './src/Components/_Modules/centeredImage';\nimport Card from '@material-ui/core/Card';\nimport CloseComparison from './src/Components/Inustry Standards/CloseComparison';\nimport ExperienceGrid from './src/Components/Experience';\nimport PnPB from './src/Components/PPB';\n\nvar data = require('./data/data.json');\n\nvar ppbData = require('./data/ppb.json');\n\nvar goalData = require('./data/Goals.json');\n\nvar ce_2020 = require('./data/2020 CE.json');\n\nvar ce_2021 = require('./data/2021 CE.json');\n\nvar classes = useStyles();\nexport default function ReportCard(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountData = _useState2[0],\n      setAccountData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      thisMonth = _useState4[0],\n      setThisMonth = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comparableMonth = _useState6[0],\n      setComparableMonth = _useState6[1];\n\n  var _useState7 = useState([{\n    'Title': '',\n    'Date': ''\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ppb = _useState8[0],\n      setPpb = _useState8[1];\n\n  var _useState9 = useState('YOY'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageSrc = _useState12[0],\n      setImageSrc = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      goals = _useState14[0],\n      setGoals = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ce2020 = _useState16[0],\n      setCE2020 = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ce2021 = _useState18[0],\n      setCE2021 = _useState18[1];\n\n  useEffect(function () {\n    var params = props.match.params[0] ? props.match.params[0].split('/')[1] : '';\n\n    var _accountData = searchData(data, params);\n\n    var _goalsData = searchData(goalData, params, 'Name')[0];\n\n    var _thisMonth = _accountData.length > 0 ? _accountData[_accountData.length - 1] : null;\n\n    var _imageSrc = \"./Plots/share_\".concat(searchData(data, params)[0]['Account'], \".svg\");\n\n    var _ce2020 = searchData(ce_2020, params);\n\n    var _ce2021 = searchData(ce_2021, params);\n\n    setAccountData(_accountData);\n    setGoals(_goalsData);\n    setThisMonth(_thisMonth);\n    setPpb(ppbData);\n    setImageSrc(_imageSrc);\n    setCE2020(_ce2020);\n    setCE2021(_ce2021); // Get Last Year Month or Last Month\n\n    var thisMonthText = ifExists(_thisMonth['Date'], null);\n\n    if (thisMonthText) {\n      var thisMonthMonth = firstStr(thisMonthText);\n      var thisMonthYear = Number(lastStr(thisMonthText));\n\n      var monthSet = _.filter(_accountData, function (x) {\n        var monthTxt = firstStr(x['Date']);\n        return monthTxt === thisMonthMonth;\n      });\n\n      var lastYearDate = thisMonthMonth + ' ' + (thisMonthYear - 1).toString();\n\n      var lastYear = _.find(monthSet, {\n        'Date': lastYearDate\n      });\n\n      if (lastYear && lastYear['Office Volume'] > 0) {\n        setPeriod('YOY');\n        setComparableMonth(lastYear);\n      } else if (_accountData[_accountData.length - 2]) {\n        setPeriod('MOM');\n        setComparableMonth(_accountData[_accountData.length - 2]);\n      } else {\n        setPeriod(null);\n      }\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        backgroundColor: mainBackgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginLeft: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Container, {\n      maxWidth: false,\n      className: classes.container,\n      id: 'content-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(NullBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(ReportCardHeader, {\n      accountData: accountData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(BoxDivider, {\n      paddingTop: 3,\n      paddingBottom: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      id: 'Report-Card-Content',\n      alignItems: 'flex-start',\n      justify: 'space-evenly',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      id: 'Data-Column',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MShareVolume, {\n      thisMonth: thisMonth,\n      comparableMonth: comparableMonth,\n      period: period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(OfficeVolume, {\n      thisMonth: thisMonth,\n      comparableMonth: comparableMonth,\n      period: period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(GraphCard, {\n      imageSrc: imageSrc,\n      height: 500,\n      header: 'Market Share & Office Volume by Month',\n      account: thisMonth['Account'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(GoalDonuts, {\n      mshare: thisMonth['YTD Market Share Volume'],\n      goals: [goals['Goal'], goals['Stretch Goal']],\n      incentives: [goals['Increase'], goals['Stretch Increase']],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      elevation: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ContinuingEducation, {\n      ce2020: ce2020,\n      ce2021: ce2021,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }))))),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      id: 'Marketing-Column',\n      alignItems: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CenteredImage, {\n      src: './images/Credit Essentials.jpg',\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      paddingTop: '2%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ExperienceGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(PnPB, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(NullBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    })))))\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/index.js"],"names":["React","useEffect","useState","_","mainBackgroundColor","useStyles","Page","BoxDivider","NullBlock","ReportCardHeader","GraphCard","searchData","MShareVolume","OfficeVolume","UpcomingBest","ifExists","firstStr","lastStr","Container","Grid","Box","CardHeader","ContinuingEducation","GoalDonuts","CSAT","CenteredImage","Card","CloseComparison","ExperienceGrid","PnPB","data","require","ppbData","goalData","ce_2020","ce_2021","classes","ReportCard","props","accountData","setAccountData","thisMonth","setThisMonth","comparableMonth","setComparableMonth","ppb","setPpb","period","setPeriod","imageSrc","setImageSrc","goals","setGoals","ce2020","setCE2020","ce2021","setCE2021","params","match","split","_accountData","_goalsData","_thisMonth","length","_imageSrc","_ce2020","_ce2021","thisMonthText","thisMonthMonth","thisMonthYear","Number","monthSet","filter","x","monthTxt","lastYearDate","toString","lastYear","find","backgroundColor","container"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { mainBackgroundColor, useStyles } from './styles';\nimport Page from '../src/components/Page';\nimport BoxDivider from './src/Components/_Modules/BoxDivider';\nimport NullBlock from './src/Components/_Modules/NullBlock';\nimport ReportCardHeader from './src/Components/Header/ReportCardHeader';\nimport GraphCard from './src/Components/_Modules/GraphCard';\nimport { searchData } from './functions/jsonParsers';\nimport MShareVolume from './src/Components/Data Components/DataBox/DataPoints/MShareVolume';\nimport OfficeVolume from './src/Components/Data Components/DataBox/DataPoints/OfficeVolume';\nimport UpcomingBest from './src/Components/Inustry Standards/upcomingBest';\nimport { ifExists } from './functions/conditionals';\nimport { firstStr, lastStr } from './functions/stringParsers';\n\nimport {\n  Container,\n  Grid,\n  Box,\n  CardHeader\n} from '@material-ui/core';\nimport ContinuingEducation from './src/Components/Continuing Education/ContinuingEducation_Deprecated';\nimport GoalDonuts from './src/Components/Data Components/Tabler Components/GoalDonuts';\nimport CSAT from './src/Components/Inustry Standards/csat';\nimport CenteredImage from './src/Components/_Modules/centeredImage';\nimport Card from '@material-ui/core/Card';\nimport CloseComparison from './src/Components/Inustry Standards/CloseComparison';\nimport ExperienceGrid from './src/Components/Experience';\nimport PnPB from './src/Components/PPB';\n\nconst data = require('./data/data.json');\nconst ppbData = require('./data/ppb.json');\nconst goalData = require('./data/Goals.json');\nconst ce_2020 = require('./data/2020 CE.json');\nconst ce_2021 = require('./data/2021 CE.json');\n\nconst classes = useStyles();\n\nexport default function ReportCard(props) {\n  const [accountData, setAccountData] = useState([]);\n  const [thisMonth, setThisMonth] = useState({});\n  const [comparableMonth, setComparableMonth] = useState({});\n  const [ppb, setPpb] = useState([{ 'Title': '', 'Date': '' }]);\n  const [period, setPeriod] = useState('YOY');\n  const [imageSrc, setImageSrc] = useState('');\n  const [goals, setGoals] = useState([]);\n  const [ce2020, setCE2020] = useState([]);\n  const [ce2021, setCE2021] = useState([]);\n\n  useEffect(() => {\n    let params = props.match.params[0] ? props.match.params[0].split('/')[1] : '';\n    let _accountData = searchData(data, params);\n    let _goalsData = searchData(goalData, params, 'Name')[0];\n    let _thisMonth = _accountData.length > 0 ? _accountData[_accountData.length - 1] : null;\n    let _imageSrc = `./Plots/share_${searchData(data, params)[0]['Account']}.svg`;\n    let _ce2020 = searchData(ce_2020, params);\n    let _ce2021 = searchData(ce_2021, params);\n\n    setAccountData(_accountData);\n    setGoals(_goalsData);\n    setThisMonth(_thisMonth);\n    setPpb(ppbData);\n    setImageSrc(_imageSrc);\n    setCE2020(_ce2020);\n    setCE2021(_ce2021);\n\n    // Get Last Year Month or Last Month\n    let thisMonthText = ifExists(_thisMonth['Date'], null);\n    if (thisMonthText) {\n      let thisMonthMonth = firstStr(thisMonthText);\n      let thisMonthYear = Number(lastStr(thisMonthText));\n\n      let monthSet = _.filter(_accountData, x => {\n        let monthTxt = firstStr(x['Date']);\n        return monthTxt === thisMonthMonth;\n      });\n\n      let lastYearDate = thisMonthMonth + ' ' + (thisMonthYear - 1).toString();\n      let lastYear = _.find(monthSet, { 'Date': lastYearDate });\n\n      if (lastYear && lastYear['Office Volume'] > 0) {\n        setPeriod('YOY');\n        setComparableMonth(lastYear);\n      } else if (_accountData[_accountData.length - 2]) {\n        setPeriod('MOM');\n        setComparableMonth(_accountData[_accountData.length - 2]);\n      } else {\n        setPeriod(null);\n      }\n    }\n\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: mainBackgroundColor }}>\n      <Page>\n        <Box marginLeft={3}>\n        <Container maxWidth={false} className={classes.container} id={'content-container'} >\n\n          <NullBlock/>\n          <ReportCardHeader accountData={accountData}/>\n\n          <BoxDivider\n            paddingTop={3}\n            paddingBottom={3}\n          />\n\n          <Grid container spacing={3} id={'Report-Card-Content'} alignItems={'flex-start'} justify={'space-evenly'}>\n            <Grid item xs={6} id={'Data-Column'}>\n              <Grid container spacing={2}>\n                <MShareVolume\n                  thisMonth={thisMonth}\n                  comparableMonth={comparableMonth}\n                  period={period}\n                />\n                <OfficeVolume\n                  thisMonth={thisMonth}\n                  comparableMonth={comparableMonth}\n                  period={period}\n                />\n              </Grid>\n\n\n              <GraphCard\n                imageSrc={imageSrc}\n                height={500}\n                header={'Market Share & Office Volume by Month'}\n                account={thisMonth['Account']}\n              />\n\n              <GoalDonuts\n                mshare={thisMonth['YTD Market Share Volume']}\n                goals={[goals['Goal'], goals['Stretch Goal']]}\n                incentives={[goals['Increase'], goals['Stretch Increase']]}\n              />\n\n              <Grid container spacing={3}>\n                <Card elevation={0}>\n                  <Grid item xs={10}>\n                    <ContinuingEducation ce2020={ce2020} ce2021={ce2021}/>\n                  </Grid>\n                </Card>\n              </Grid>\n\n            </Grid>\n\n            <Grid item id={'Marketing-Column'} alignItems={'flex-start'}>\n              <CenteredImage src={'./images/Credit Essentials.jpg'} height={400}/>\n              <Box paddingTop={'2%'}>\n                <ExperienceGrid />\n              </Box>\n              {/*<Box paddingTop={'2%'}>*/}\n              {/*  <CenteredImage src={'./images/Courses Offered.png'} height={715}/>*/}\n              {/*</Box>*/}\n              {/*<UpcomingBest/>*/}\n              <PnPB />\n            </Grid>\n          </Grid>\n          <NullBlock/>\n        </Container>\n        </Box>\n      </Page>\n    </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}