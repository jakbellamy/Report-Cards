{"ast":null,"code":"import _objectSpread from \"/Users/jakobbellamy/Dev/refactor/Report-Cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/jakobbellamy/Dev/refactor/Report-Cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataBox/TriDataBox.js\";\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { CardContent, Typography, Card as MCard } from '@material-ui/core';\nimport { Grid, ProgressCard, StatsCard, Card, colors, Header } from 'tabler-react';\nimport useStyles from './triStyles';\nimport { cardElevation } from '../../../../styles';\nimport Box from '@material-ui/core/Box';\nexport var TriDataBox = function TriDataBox(props) {\n  var className = props.className,\n      title = props.title,\n      valueYTD = props.valueYTD,\n      valueComp = props.valueComp,\n      differenceValue = props.differenceValue,\n      captions = props.captions,\n      period = props.period,\n      rest = _objectWithoutProperties(props, [\"className\", \"title\", \"valueYTD\", \"valueComp\", \"differenceValue\", \"captions\", \"period\"]);\n\n  var positiveDifference = differenceValue && differenceValue.charAt(0) === '+';\n  var classes = useStyles(_objectSpread({\n    positiveDifference: positiveDifference\n  }, props));\n  captions = captions.map(function (caption) {\n    if (!caption) {\n      return '';\n    }\n\n    return caption.split(' ')[0].slice(0, 3) + ' ' + caption.split(' ')[1];\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(MCard, {\n      elevation: cardElevation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 7,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, differenceValue != '0%' ?\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.top,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, period) : null,\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, title)),\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 'auto',\n      align: differenceValue === '0%' ? 'center' : 'left',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: classes.center,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Header, {\n      className: classes.differenceValue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, differenceValue === '0%' ? '' : differenceValue)))),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 'auto',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Header, {\n      size: \"2\",\n      className: \"font-normal mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, captions[0] ? captions[0].split(' ')[1] : '', \" Year End\")),\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 6,\n      align: 'right',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Header, {\n      size: \"2\",\n      className: \"font-medium mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, valueYTD))),\n    /*#__PURE__*/\n    React.createElement(Grid.Row, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 'auto',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Header, {\n      size: \"2\",\n      className: \"font-normal mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, captions[1] ? captions[1].split(' ')[1] : '')),\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 6,\n      align: 'right',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Header, {\n      size: \"2\",\n      className: \"font-medium mb-0\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, valueComp))))))\n  );\n};\nTriDataBox.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  differenceValue: PropTypes.string,\n  caption: PropTypes.string\n};","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataBox/TriDataBox.js"],"names":["React","clsx","PropTypes","CardContent","Typography","Card","MCard","Grid","ProgressCard","StatsCard","colors","Header","useStyles","cardElevation","Box","TriDataBox","props","className","title","valueYTD","valueComp","differenceValue","captions","period","rest","positiveDifference","charAt","classes","map","caption","split","slice","top","center","propTypes","string","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  CardContent,\n  Typography,\n  Card as MCard\n} from '@material-ui/core';\nimport {\n  Grid,\n  ProgressCard,\n  StatsCard,\n  Card,\n  colors,\n  Header\n} from 'tabler-react';\nimport useStyles from './triStyles';\nimport { cardElevation } from '../../../../styles';\nimport Box from '@material-ui/core/Box';\n\nexport const TriDataBox = props => {\n  let { className, title, valueYTD, valueComp, differenceValue, captions, period, ...rest } = props;\n  const positiveDifference = differenceValue && differenceValue.charAt(0) === '+';\n  const classes = useStyles({ positiveDifference, ...props });\n\n  captions = captions.map(caption => {\n    if (!caption) {\n      return '';\n    }\n    return (\n      caption.split(' ')[0].slice(0, 3)\n      + ' '\n      + caption.split(' ')[1]\n    );\n  });\n\n  return (\n      <MCard elevation={cardElevation}>\n        <Card.Body>\n\n          <Grid.Row>\n            <Grid.Col sm={7}>\n            {differenceValue != '0%' ? (\n                <Typography className={classes.top}>{period}</Typography>\n            ) : null}\n              <Typography className={classes.title}>{title}</Typography>\n            </Grid.Col>\n            <Grid.Col sm={'auto'} align={differenceValue === '0%' ? 'center' : 'left'}>\n              <div className={classes.center}>\n                <Header className={classes.differenceValue}>{differenceValue === '0%' ? '' : differenceValue}</Header>\n              </div>\n\n            </Grid.Col>\n          </Grid.Row>\n          <Box >\n            <Grid.Row >\n              <Grid.Col sm={'auto'} >\n                <Header size='2' className='font-normal mb-0'>{captions[0] ? captions[0].split(' ')[1] : ''} Year End</Header>\n              </Grid.Col>\n              <Grid.Col sm={6} align={'right'}>\n                <Header size='2' className='font-medium mb-0'>{valueYTD}</Header>\n              </Grid.Col>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Col sm={'auto'}>\n                <Header size='2' className='font-normal mb-0'>{captions[1] ? captions[1].split(' ')[1] : ''}</Header>\n              </Grid.Col>\n              <Grid.Col sm={6} align={'right'}>\n                <Header size='2' className='font-medium mb-0'>{valueComp}</Header>\n              </Grid.Col>\n            </Grid.Row>\n          </Box>\n\n\n        </Card.Body>\n      </MCard>\n  );\n};\n\nTriDataBox.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  value: PropTypes.string,\n  differenceValue: PropTypes.string,\n  caption: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}