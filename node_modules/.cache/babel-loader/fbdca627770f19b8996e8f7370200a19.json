{"ast":null,"code":"import _slicedToArray from \"/Users/jakobbellamy/Dev/refactor/Report-Cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/jakobbellamy/Dev/refactor/Report-Cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { mainBackgroundColor } from './styles';\nimport Page from '../src/components/Page';\nimport BoxDivider from './src/Components/_Modules/BoxDivider';\nimport NullBlock from './src/Components/_Modules/NullBlock';\nimport ReportCardHeader from './src/Components/Header/ReportCardHeader';\nimport GraphCard from './src/Components/_Modules/GraphCard';\nimport { searchData } from './functions/jsonParsers';\nimport MShareVolume from './src/Components/Data Components/DataBox/DataPoints/MShareVolume';\nimport OfficeVolume from './src/Components/Data Components/DataBox/DataPoints/OfficeVolume';\nimport UpcomingBest from './src/Components/Inustry Standards/upcomingBest';\nimport { ifExists } from './functions/conditionals';\nimport { firstStr, lastStr } from './functions/stringParsers';\nimport { Container, Grid, Box, CardHeader, makeStyles } from '@material-ui/core';\nimport ContinuingEducation from './src/Components/Continuing Education/ContinuingEducation';\nimport GoalDonuts from './src/Components/Data Components/Tabler Components/GoalDonuts';\nimport CSAT from './src/Components/Inustry Standards/csat';\nimport CenteredImage from './src/Components/_Modules/centeredImage';\nimport Card from '@material-ui/core/Card';\nimport CloseComparison from './src/Components/Inustry Standards/CloseComparison';\nimport ExperienceGrid from './src/Components/Experience';\nimport PnPB from './src/Components/PPB';\nimport DataTable from './src/Components/Data Components/Data Table';\nimport RetroData from './src/Components/Data Components/DataBox/DataPoints/RetroData';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nvar data = require('./data/data.json');\n\nvar ppbData = require('./data/ppb.json');\n\nvar goalData = require('./data/Goals.json');\n\nvar ce_2020 = require('./data/2020 CE.json');\n\nvar ce_2021 = require('./data/2021 CE.json');\n\nvar useStyles = function useStyles() {\n  return makeStyles(function (theme) {\n    return {\n      text: {\n        flexWrap: 'wrap',\n        maxWidth: '240px',\n        margin: '5 -5 5 -5'\n      },\n      root: {\n        backgroundColor: theme.palette.background.dark,\n        minHeight: '100%',\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(3),\n        minWidth: '100%'\n      },\n      container: _defineProperty({}, theme.breakpoints.up('lg'), {\n        paddingLeft: 64,\n        paddingRight: 64\n      })\n    };\n  });\n};\n\nexport default function ReportCard(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountData = _useState2[0],\n      setAccountData = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      thisMonth = _useState4[0],\n      setThisMonth = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      comparableMonth = _useState6[0],\n      setComparableMonth = _useState6[1];\n\n  var _useState7 = useState([{\n    'Title': '',\n    'Date': ''\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      ppb = _useState8[0],\n      setPpb = _useState8[1];\n\n  var _useState9 = useState('YOY'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      period = _useState10[0],\n      setPeriod = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      imageSrc = _useState12[0],\n      setImageSrc = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      goals = _useState14[0],\n      setGoals = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      ce2020 = _useState16[0],\n      setCE2020 = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      ce2021 = _useState18[0],\n      setCE2021 = _useState18[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    var params = props.match.params[0] ? props.match.params[0].split('/')[1] : '';\n\n    var _accountData = searchData(data, params);\n\n    var _goalsData = searchData(goalData, params, 'Name')[0];\n\n    var _thisMonth = _accountData.length > 0 ? _accountData[_accountData.length - 1] : null;\n\n    var _imageSrc = \"./Plots/share_\".concat(searchData(data, params)[0]['Account'], \".svg\");\n\n    var _ce2020 = searchData(ce_2020, params);\n\n    var _ce2021 = searchData(ce_2021, params);\n\n    setAccountData(_accountData);\n    setGoals(_goalsData);\n    setThisMonth(_thisMonth);\n    setPpb(ppbData);\n    setImageSrc(_imageSrc);\n    setCE2020(_ce2020);\n    setCE2021(_ce2021); // Get Last Year Month or Last Month\n\n    var thisMonthText = ifExists(_thisMonth['Date'], null);\n\n    if (thisMonthText) {\n      var thisMonthMonth = firstStr(thisMonthText);\n      var thisMonthYear = Number(lastStr(thisMonthText));\n\n      var monthSet = _.filter(_accountData, function (x) {\n        var monthTxt = firstStr(x['Date']);\n        return monthTxt === thisMonthMonth;\n      });\n\n      var lastYearDate = thisMonthMonth + ' ' + (thisMonthYear - 1).toString();\n\n      var lastYear = _.find(monthSet, {\n        'Date': lastYearDate\n      });\n\n      if (lastYear && lastYear['Office Volume'] > 0) {\n        setPeriod('YOY');\n        setComparableMonth(lastYear);\n      } else if (_accountData[_accountData.length - 2]) {\n        setPeriod('MOM');\n        setComparableMonth(_accountData[_accountData.length - 2]);\n      } else {\n        setPeriod(null);\n      }\n    }\n  }, []);\n  var ce_adverts = [['./CE/Social Media.svg', 'Understanding Appraisals', \"We've partnered with D.S. Murphy & Associates to bring you 5 distinct courses on Appraisals.\"], ['./CE/Introduction to Condominiums.svg', 'Introduction to Condominiums', \"Our Condo class was designed to help you better understand all of the intricacies of this transaction.\"], ['./CE/Fundamentals of Credit.svg', 'Fundamentals of Credit', \"Our credit class removes the mystery surrounding credit scores, leaving you better equipped to help your buyer qualify for the home of their dreams.\"], ['./CE/Market Like a Rockstar.svg', 'Market Like a Rockstar', \"Developed by 4x Grammy-Award winner Tai Anderson of Third Day, our 2 newest C.E. classes will teach you how to Market Like A Rockstar and take advantage of Social Media to grow your audience.\"]];\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: {\n        backgroundColor: mainBackgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Page, {\n      className: \"report-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ReportCardHeader, {\n      data: thisMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginLeft: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Container, {\n      maxWidth: false,\n      className: classes.container,\n      id: 'content-container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(NullBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(BoxDivider, {\n      paddingTop: 3,\n      paddingBottom: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      id: 'Report-Card-Content',\n      alignItems: 'flex-start',\n      justify: 'space-evenly',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      id: 'Data-Column',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(MShareVolume, {\n      thisMonth: thisMonth,\n      comparableMonth: comparableMonth,\n      period: period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(OfficeVolume, {\n      thisMonth: thisMonth,\n      comparableMonth: comparableMonth,\n      period: period,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(GoalDonuts, {\n      mshare: thisMonth['YTD Market Share Volume'],\n      goals: [goals['Goal'], goals['Stretch Goal']],\n      incentives: [goals['Increase'], goals['Stretch Increase']],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginTop: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(RetroData, {\n      data: accountData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(GraphCard, {\n      imageSrc: imageSrc,\n      height: 620,\n      header: 'Market Share & Office Volume by Month',\n      account: thisMonth['Account'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginTop: 3,\n      marginBottom: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ContinuingEducation, {\n      ce2020: ce2020,\n      ce2021: ce2021,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      id: 'Marketing-Column',\n      alignItems: 'flex-start',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CenteredImage, {\n      src: './images/Credit Essentials.jpg',\n      height: 400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      paddingTop: '2%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(ExperienceGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      paddingTop: '2%',\n      align: 'center',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CenteredImage, {\n      src: 'https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/153168374_3681749721920486_5624809215965204231_o.jpg?_nc_cat=105&ccb=3&_nc_sid=340051&_nc_ohc=uuz-wa4KUzkAX_pZ1SV&_nc_ht=scontent-iad3-1.xx&oh=f0aea9bad0c5b72e2387812b068f8179&oe=605DEB57',\n      height: '420',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      padding: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, ce_adverts.slice(0, 2).map(function (item) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          xs: 'auto',\n          sm: 6,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 27\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Card, {\n          elevation: 0,\n          align: 'center',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 29\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Box, {\n          width: 400,\n          margin: -3,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 31\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: 'h4',\n          className: classes.ceTitle,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 37\n          }\n        }, item[1]),\n        /*#__PURE__*/\n        React.createElement(\"embed\", {\n          src: item[0],\n          style: {\n            borderRadius: '50%'\n          },\n          height: 100,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }\n        }),\n        /*#__PURE__*/\n        React.createElement(Typography, {\n          variant: \"subtitle1\",\n          paddingTop: '50%',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 39\n          }\n        }, item[2]))))\n      );\n    })))),\n    /*#__PURE__*/\n    React.createElement(NullBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    })))))\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/index.js"],"names":["React","useEffect","useState","_","mainBackgroundColor","Page","BoxDivider","NullBlock","ReportCardHeader","GraphCard","searchData","MShareVolume","OfficeVolume","UpcomingBest","ifExists","firstStr","lastStr","Container","Grid","Box","CardHeader","makeStyles","ContinuingEducation","GoalDonuts","CSAT","CenteredImage","Card","CloseComparison","ExperienceGrid","PnPB","DataTable","RetroData","Typography","Paper","data","require","ppbData","goalData","ce_2020","ce_2021","useStyles","theme","text","flexWrap","maxWidth","margin","root","backgroundColor","palette","background","dark","minHeight","paddingTop","spacing","paddingBottom","minWidth","container","breakpoints","up","paddingLeft","paddingRight","ReportCard","props","accountData","setAccountData","thisMonth","setThisMonth","comparableMonth","setComparableMonth","ppb","setPpb","period","setPeriod","imageSrc","setImageSrc","goals","setGoals","ce2020","setCE2020","ce2021","setCE2021","classes","params","match","split","_accountData","_goalsData","_thisMonth","length","_imageSrc","_ce2020","_ce2021","thisMonthText","thisMonthMonth","thisMonthYear","Number","monthSet","filter","x","monthTxt","lastYearDate","toString","lastYear","find","ce_adverts","slice","map","item","ceTitle","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { mainBackgroundColor } from './styles';\nimport Page from '../src/components/Page';\nimport BoxDivider from './src/Components/_Modules/BoxDivider';\nimport NullBlock from './src/Components/_Modules/NullBlock';\nimport ReportCardHeader from './src/Components/Header/ReportCardHeader';\nimport GraphCard from './src/Components/_Modules/GraphCard';\nimport { searchData } from './functions/jsonParsers';\nimport MShareVolume from './src/Components/Data Components/DataBox/DataPoints/MShareVolume';\nimport OfficeVolume from './src/Components/Data Components/DataBox/DataPoints/OfficeVolume';\nimport UpcomingBest from './src/Components/Inustry Standards/upcomingBest';\nimport { ifExists } from './functions/conditionals';\nimport { firstStr, lastStr } from './functions/stringParsers';\n\nimport {\n  Container,\n  Grid,\n  Box,\n  CardHeader, makeStyles\n} from '@material-ui/core';\nimport ContinuingEducation from './src/Components/Continuing Education/ContinuingEducation';\nimport GoalDonuts from './src/Components/Data Components/Tabler Components/GoalDonuts';\nimport CSAT from './src/Components/Inustry Standards/csat';\nimport CenteredImage from './src/Components/_Modules/centeredImage';\nimport Card from '@material-ui/core/Card';\nimport CloseComparison from './src/Components/Inustry Standards/CloseComparison';\nimport ExperienceGrid from './src/Components/Experience';\nimport PnPB from './src/Components/PPB';\nimport DataTable from './src/Components/Data Components/Data Table';\nimport RetroData from './src/Components/Data Components/DataBox/DataPoints/RetroData';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nconst data = require('./data/data.json');\nconst ppbData = require('./data/ppb.json');\nconst goalData = require('./data/Goals.json');\nconst ce_2020 = require('./data/2020 CE.json');\nconst ce_2021 = require('./data/2021 CE.json');\n\nconst useStyles = () => {\n  return makeStyles((theme) => ({\n    text: {\n      flexWrap: 'wrap',\n      maxWidth: '240px',\n      margin: '5 -5 5 -5',\n\n    },\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      minHeight: '100%',\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3),\n      minWidth: '100%'\n    },\n    container: {\n      [theme.breakpoints.up('lg')]: {\n        paddingLeft: 64,\n        paddingRight: 64\n      }\n    },\n  }))\n}\n\nexport default function ReportCard(props) {\n  const [accountData, setAccountData] = useState([]);\n  const [thisMonth, setThisMonth] = useState({});\n  const [comparableMonth, setComparableMonth] = useState({});\n  const [ppb, setPpb] = useState([{ 'Title': '', 'Date': '' }]);\n  const [period, setPeriod] = useState('YOY');\n  const [imageSrc, setImageSrc] = useState('');\n  const [goals, setGoals] = useState([]);\n  const [ce2020, setCE2020] = useState([]);\n  const [ce2021, setCE2021] = useState([]);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    let params = props.match.params[0] ? props.match.params[0].split('/')[1] : '';\n    let _accountData = searchData(data, params);\n    let _goalsData = searchData(goalData, params, 'Name')[0];\n    let _thisMonth = _accountData.length > 0 ? _accountData[_accountData.length - 1] : null;\n    let _imageSrc = `./Plots/share_${searchData(data, params)[0]['Account']}.svg`;\n    let _ce2020 = searchData(ce_2020, params);\n    let _ce2021 = searchData(ce_2021, params);\n\n    setAccountData(_accountData);\n    setGoals(_goalsData);\n    setThisMonth(_thisMonth);\n    setPpb(ppbData);\n    setImageSrc(_imageSrc);\n    setCE2020(_ce2020);\n    setCE2021(_ce2021);\n\n    // Get Last Year Month or Last Month\n    let thisMonthText = ifExists(_thisMonth['Date'], null);\n    if (thisMonthText) {\n      let thisMonthMonth = firstStr(thisMonthText);\n      let thisMonthYear = Number(lastStr(thisMonthText));\n\n      let monthSet = _.filter(_accountData, x => {\n        let monthTxt = firstStr(x['Date']);\n        return monthTxt === thisMonthMonth;\n      });\n\n      let lastYearDate = thisMonthMonth + ' ' + (thisMonthYear - 1).toString();\n      let lastYear = _.find(monthSet, { 'Date': lastYearDate });\n\n      if (lastYear && lastYear['Office Volume'] > 0) {\n        setPeriod('YOY');\n        setComparableMonth(lastYear);\n      } else if (_accountData[_accountData.length - 2]) {\n        setPeriod('MOM');\n        setComparableMonth(_accountData[_accountData.length - 2]);\n      } else {\n        setPeriod(null);\n      }\n    }\n\n  }, []);\n\n  const ce_adverts = [\n      ['./CE/Social Media.svg', 'Understanding Appraisals', \"We've partnered with D.S. Murphy & Associates to bring you 5 distinct courses on Appraisals.\"],\n      ['./CE/Introduction to Condominiums.svg', 'Introduction to Condominiums', \"Our Condo class was designed to help you better understand all of the intricacies of this transaction.\"],\n      ['./CE/Fundamentals of Credit.svg', 'Fundamentals of Credit', \"Our credit class removes the mystery surrounding credit scores, leaving you better equipped to help your buyer qualify for the home of their dreams.\"],\n      ['./CE/Market Like a Rockstar.svg', 'Market Like a Rockstar', \"Developed by 4x Grammy-Award winner Tai Anderson of Third Day, our 2 newest C.E. classes will teach you how to Market Like A Rockstar and take advantage of Social Media to grow your audience.\"]\n  ]\n\n  return (\n    <div style={{ backgroundColor: mainBackgroundColor }}>\n      <Page className=\"report-card\">\n      <ReportCardHeader data={thisMonth}/>\n        <Box marginLeft={3}>\n        <Container maxWidth={false} className={classes.container} id={'content-container'} >\n\n          <NullBlock/>\n\n          <BoxDivider\n            paddingTop={3}\n            paddingBottom={3}\n          />\n\n          <Grid container spacing={3} id={'Report-Card-Content'} alignItems={'flex-start'} justify={'space-evenly'}>\n            <Grid item xs={6} id={'Data-Column'}>\n              <Grid container spacing={2}>\n                <MShareVolume\n                  thisMonth={thisMonth}\n                  comparableMonth={comparableMonth}\n                  period={period}\n                />\n                <OfficeVolume\n                  thisMonth={thisMonth}\n                  comparableMonth={comparableMonth}\n                  period={period}\n                />\n              </Grid>\n\n\n              <GoalDonuts\n                mshare={thisMonth['YTD Market Share Volume']}\n                goals={[goals['Goal'], goals['Stretch Goal']]}\n                incentives={[goals['Increase'], goals['Stretch Increase']]}\n              />\n              <Box marginTop={2}>\n                <RetroData data={accountData}/>\n              </Box>\n\n              <GraphCard\n                imageSrc={imageSrc}\n                height={620}\n                header={'Market Share & Office Volume by Month'}\n                account={thisMonth['Account']}\n              />\n\n\n              <Box marginTop={3} marginBottom={3}>\n                <ContinuingEducation ce2020={ce2020} ce2021={ce2021}/>\n              </Box>\n\n            </Grid>\n\n            <Grid item id={'Marketing-Column'} alignItems={'flex-start'} >\n              <CenteredImage src={'./images/Credit Essentials.jpg'} height={400}/>\n              <Box paddingTop={'2%'}>\n                <ExperienceGrid />\n              </Box>\n              <Box paddingTop={'2%'} align={'center'}>\n                <CenteredImage src={'https://scontent-iad3-1.xx.fbcdn.net/v/t1.0-9/153168374_3681749721920486_5624809215965204231_o.jpg?_nc_cat=105&ccb=3&_nc_sid=340051&_nc_ohc=uuz-wa4KUzkAX_pZ1SV&_nc_ht=scontent-iad3-1.xx&oh=f0aea9bad0c5b72e2387812b068f8179&oe=605DEB57'}\n                               height={'420'}/>\n              </Box>\n              {/*<PnPB />*/}\n              {/*<div style={{flexGrow: 1}}>*/}\n                {/*<Grid container spacing={3}>*/}\n                {/*  <Box  >*/}\n                    <Grid container spacing={2} padding={3}>\n                      {ce_adverts.slice(0,2).map(item => {\n                        return (\n                          <Grid item xs={'auto'} sm={6}>\n                            <Card elevation={0}  align={'center'}>\n                              <Box  width={400} margin={-3}>\n                                  {/*<Box marginTop={'6%'} >*/}\n                                    <Typography variant={'h4'} className={classes.ceTitle}>{item[1]}</Typography>\n                                  {/*</Box>*/}\n                                  {/*<Box align={'center'}  marginTop={2}>*/}\n                                    <embed src={item[0]} style={{borderRadius: '50%'}} height={100}/>\n                                    {/*<Box marginTop={2}>*/}\n                                      <Typography variant='subtitle1' paddingTop={'50%'}>{item[2]}</Typography>\n\n                                    {/*</Box>*/}\n                                  {/*</Box>*/}\n                              </Box>\n                            </Card>\n                          </Grid>\n                        )\n                      })}\n\n\n\n                    </Grid>\n                  {/*</Box>*/}\n                {/*</Grid>*/}\n              {/*</div>*/}\n            </Grid>\n\n\n          </Grid>\n\n\n          <NullBlock/>\n        </Container>\n        </Box>\n      </Page>\n    </div>\n\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}