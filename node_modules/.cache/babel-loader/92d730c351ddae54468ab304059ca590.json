{"ast":null,"code":"var asUSD = function asUSD(cost) {\n  var toPlace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var moneyString = cost.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).split('.');\n  var tail = toPlace > 0 ? '.' + moneyString[1].slice(0, toPlace) : '';\n  return moneyString[0] + tail;\n};\n\nvar printPercent = function printPercent(percent) {\n  var toDecimalPlace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  percent = (percent * 100).toFixed(2 + toDecimalPlace).toString();\n  return percent + '%';\n};\n\nexport { asUSD, printPercent };","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/functions/dataDisplayers.js"],"names":["asUSD","cost","toPlace","moneyString","toLocaleString","style","currency","split","tail","slice","printPercent","percent","toDecimalPlace","toFixed","toString"],"mappings":"AACA,IAAMA,KAAK,GAAG,SAARA,KAAQ,CAACC,IAAD,EAAqB;AAAA,MAAdC,OAAc,uEAAN,CAAM;AACjC,MAAIC,WAAW,GAAGF,IAAI,CAACG,cAAL,CAAoB,OAApB,EAA6B;AACPC,IAAAA,KAAK,EAAE,UADA;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAA7B,EAGsBC,KAHtB,CAG4B,GAH5B,CAAlB;AAIA,MAAIC,IAAI,GAAGN,OAAO,GAAG,CAAV,GAAc,MAAMC,WAAW,CAAC,CAAD,CAAX,CAAeM,KAAf,CAAqB,CAArB,EAAwBP,OAAxB,CAApB,GAAuD,EAAlE;AACA,SAAOC,WAAW,CAAC,CAAD,CAAX,GAAiBK,IAAxB;AACD,CAPD;;AASA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAA+B;AAAA,MAArBC,cAAqB,uEAAN,CAAM;AAClDD,EAAAA,OAAO,GAAG,CAACA,OAAO,GAAG,GAAX,EACGE,OADH,CACW,IAAID,cADf,EAEGE,QAFH,EAAV;AAGA,SAAOH,OAAO,GAAG,GAAjB;AACD,CALD;;AAOA,SAASX,KAAT,EAAgBU,YAAhB","sourcesContent":["\nconst asUSD = (cost, toPlace=0) => {\n  let moneyString = cost.toLocaleString('en-US', {\n                                          style: 'currency',\n                                          currency: 'USD'\n                                       }).split('.')\n  let tail = toPlace > 0 ? '.' + moneyString[1].slice(0, toPlace) : ''\n  return moneyString[0] + tail\n}\n\nconst printPercent = (percent, toDecimalPlace=0) => {\n  percent = (percent * 100)\n              .toFixed(2 + toDecimalPlace)\n              .toString()\n  return percent + '%'\n}\n\nexport { asUSD, printPercent }\n"]},"metadata":{},"sourceType":"module"}