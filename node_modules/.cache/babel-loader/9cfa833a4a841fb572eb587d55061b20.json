{"ast":null,"code":"var _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataBox/DataPoints/RetroData.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { DataBox } from '../DataBox';\nimport { valueKeyText, calculatePercentChange, printPercent, formatPercentAsString } from '../../DataFunctions';\nexport default function RetroDataGrid(props) {\n  var _this = this;\n\n  var finalMonth = props.finalMonth,\n      comparableMonth = props.comparableMonth,\n      key = props.key;\n  var captions = ['', ''];\n  var percentChangeStr = '';\n  var valueKey = valueKeyText(period);\n\n  if (comparableMonth) {\n    captions = [finalMonth['Date'], comparableMonth['Date']];\n    var percentChangeInt = calculatePercentChange('YTD ' + key, finalMonth, comparableMonth);\n    percentChangeStr = formatPercentAsString(percentChangeInt, 0);\n  }\n\n  var valueYTD = finalMonth[valueKey] ? printPercent(finalMonth[valueKey]) : '';\n  var valueComp = comparableMonth[valueKey] ? printPercent(comparableMonth[valueKey]) : '';\n  var cardData = [];\n  return (\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, cardData.map(function (card) {\n      return (\n        /*#__PURE__*/\n        React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(DataBox, {\n          title: key,\n          valueYTD: valueYTD,\n          valueComp: valueComp,\n          differenceValue: percentChangeStr,\n          captions: captions,\n          period: '2020 Year End',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }))\n      );\n    }))\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/DataBox/DataPoints/RetroData.js"],"names":["React","Grid","DataBox","valueKeyText","calculatePercentChange","printPercent","formatPercentAsString","RetroDataGrid","props","finalMonth","comparableMonth","key","captions","percentChangeStr","valueKey","period","percentChangeInt","valueYTD","valueComp","cardData","map","card"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,YAAT,EAAuBC,sBAAvB,EAA+CC,YAA/C,EAA6DC,qBAA7D,QAA0F,qBAA1F;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAAA,MACnCC,UADmC,GACED,KADF,CACnCC,UADmC;AAAA,MACvBC,eADuB,GACEF,KADF,CACvBE,eADuB;AAAA,MACNC,GADM,GACEH,KADF,CACNG,GADM;AAG3C,MAAIC,QAAQ,GAAG,CAAC,EAAD,EAAK,EAAL,CAAf;AACA,MAAIC,gBAAgB,GAAG,EAAvB;AACA,MAAIC,QAAQ,GAAGX,YAAY,CAACY,MAAD,CAA3B;;AAEA,MAAIL,eAAJ,EAAqB;AACnBE,IAAAA,QAAQ,GAAG,CAACH,UAAU,CAAC,MAAD,CAAX,EAAqBC,eAAe,CAAC,MAAD,CAApC,CAAX;AACA,QAAIM,gBAAgB,GAAGZ,sBAAsB,CAAC,SAASO,GAAV,EAAeF,UAAf,EAA2BC,eAA3B,CAA7C;AACAG,IAAAA,gBAAgB,GAAGP,qBAAqB,CAACU,gBAAD,EAAmB,CAAnB,CAAxC;AACD;;AAED,MAAIC,QAAQ,GAAGR,UAAU,CAACK,QAAD,CAAV,GAAuBT,YAAY,CAACI,UAAU,CAACK,QAAD,CAAX,CAAnC,GAA4D,EAA3E;AACA,MAAII,SAAS,GAAGR,eAAe,CAACI,QAAD,CAAf,GAA4BT,YAAY,CAACK,eAAe,CAACI,QAAD,CAAhB,CAAxC,GAAsE,EAAtF;AAEA,MAAIK,QAAQ,GAAG,EAAf;AACA;AAAA;AACE,wBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACC,GAAT,CAAa,UAAAC,IAAI;AAAA;AAAA;AAChB,4BAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,4BAAC,OAAD;AACE,UAAA,KAAK,EAAEV,GADT;AAEE,UAAA,QAAQ,EAAEM,QAFZ;AAGE,UAAA,SAAS,EAAEC,SAHb;AAIE,UAAA,eAAe,EAAEL,gBAJnB;AAKE,UAAA,QAAQ,EAAED,QALZ;AAME,UAAA,MAAM,EAAE,eANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AADgB;AAAA,KAAjB,CADH;AADF;AAiBD","sourcesContent":["import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { DataBox } from '../DataBox';\nimport { valueKeyText, calculatePercentChange, printPercent, formatPercentAsString } from '../../DataFunctions';\n\nexport default function RetroDataGrid(props) {\n  const { finalMonth, comparableMonth, key } = props;\n\n  let captions = ['', ''];\n  let percentChangeStr = '';\n  let valueKey = valueKeyText(period);\n\n  if (comparableMonth) {\n    captions = [finalMonth['Date'], comparableMonth['Date']];\n    let percentChangeInt = calculatePercentChange('YTD ' + key, finalMonth, comparableMonth);\n    percentChangeStr = formatPercentAsString(percentChangeInt, 0);\n  }\n\n  let valueYTD = finalMonth[valueKey] ? printPercent(finalMonth[valueKey]) : '';\n  let valueComp = comparableMonth[valueKey] ? printPercent(comparableMonth[valueKey]) : '';\n\n  let cardData = []\n  return (\n    <Grid container spacing={3}>\n      {cardData.map(card => (\n        <Grid item xs={4}>\n          <DataBox\n            title={key}\n            valueYTD={valueYTD}\n            valueComp={valueComp}\n            differenceValue={percentChangeStr}\n            captions={captions}\n            period={'2020 Year End'}\n            />\n        </Grid>\n      ))}\n    </Grid>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}