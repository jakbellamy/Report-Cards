{"ast":null,"code":"var _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/Tabler Components/PercentToGoalCard.js\";\nimport React from 'react';\nimport { Grid, ProgressCard, StatsCard, colors, Header, Card as TCard } from 'tabler-react';\nimport C3Chart from 'react-c3js';\nimport { printPercent } from '../../../../functions/dataDisplayers';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport { cardElevation } from '../../../../styles';\nexport default function PercentToGoal(props) {\n  var mshare = props.mshare,\n      goal = props.goal,\n      header = props.header,\n      color = props.color;\n  var percentageToGoal = mshare / goal <= 1 ? mshare / goal * 100 : 100;\n  var percentLeft = percentageToGoal <= 100 ? 100 - percentageToGoal : 0;\n  console.log(percentageToGoal);\n  return (\n    /*#__PURE__*/\n    React.createElement(Grid.Col, {\n      sm: 6,\n      marginTop: -2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      elevation: cardElevation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TCard.Body, {\n      className: \"text-center\",\n      paddingTop: -2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"2021 Market Share\"),\n    /*#__PURE__*/\n    React.createElement(Header, {\n      className: \"display-4 font-weight-medium mb-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, header),\n    /*#__PURE__*/\n    React.createElement(Header, {\n      className: \"display-4 font-weight-bold mb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, printPercent(goal))),\n    /*#__PURE__*/\n    React.createElement(C3Chart, {\n      style: {\n        height: '8em',\n        fontSize: '25px'\n      },\n      data: {\n        columns: [['data1', percentageToGoal], ['data2', percentLeft]],\n        type: 'donut',\n        colors: {\n          data1: color,\n          data2: colors['gray-lighter']\n        },\n        names: {\n          data1: 'Current: ' + printPercent(mshare, -1),\n          data2: percentageToGoal < 100 ? 'Difference: ' + printPercent(goal - mshare, -1) : 'Difference: 0%'\n        },\n        labels: false\n      },\n      legend: {\n        show: true\n      },\n      padding: {\n        bottom: 0,\n        top: -4\n      },\n      tooltip: {\n        show: false\n      },\n      donut: {\n        label: {\n          show: false\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })))\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Data Components/Tabler Components/PercentToGoalCard.js"],"names":["React","Grid","ProgressCard","StatsCard","colors","Header","Card","TCard","C3Chart","printPercent","Typography","cardElevation","PercentToGoal","props","mshare","goal","header","color","percentageToGoal","percentLeft","console","log","fontWeight","fontSize","height","columns","type","data1","data2","names","labels","show","bottom","top","label"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Grid,\n  ProgressCard,\n  StatsCard,\n  colors,\n  Header,\n  Card as TCard\n} from 'tabler-react';\nimport C3Chart from 'react-c3js';\nimport { printPercent } from '../../../../functions/dataDisplayers';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport { cardElevation } from '../../../../styles';\n\n\nexport default function PercentToGoal(props) {\n  let { mshare, goal, header, color } = props;\n\n  let percentageToGoal = mshare / goal <= 1 ? mshare / goal * 100 : 100;\n  let percentLeft = percentageToGoal <= 100 ? 100 - percentageToGoal : 0;\n\n\n  console.log(percentageToGoal);\n  return (\n    <Grid.Col sm={6} marginTop={-2} >\n      <Card elevation={cardElevation} >\n          <TCard.Body className=\"text-center\" paddingTop={-2}>\n            <Typography style={{fontWeight: 'bold', fontSize: '20px'}}>2021 Market Share</Typography>\n\n            <Header className=\"display-4 font-weight-medium mb-auto\">{header}</Header>\n            <Header className=\"display-4 font-weight-bold mb-0\">{printPercent(goal)}</Header>\n          </TCard.Body>\n          <C3Chart\n            style={{ height: '8em', fontSize: '25px'}}\n            data={{\n              columns: [\n                ['data1', percentageToGoal],\n                ['data2', percentLeft]\n              ],\n              type: 'donut',\n              colors: {\n                data1: color,\n                data2: colors['gray-lighter']\n              },\n              names: {\n                data1: 'Current: ' + printPercent(mshare, -1),\n                data2: percentageToGoal < 100 ? 'Difference: ' + printPercent(goal - mshare, -1) : 'Difference: 0%'\n              },\n              labels: false\n            }}\n            legend={{\n              show: true,\n            }}\n            padding={{\n              bottom: 0,\n              top: -4\n            }}\n            tooltip={{\n              show: false\n            }}\n            donut={{\n              label: {\n                show: false\n              }\n            }}\n          />\n      </Card>\n    </Grid.Col>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}