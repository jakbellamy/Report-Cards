{"ast":null,"code":"var _jsxFileName = \"/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Continuing Education/UpcomingEvent.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Card from '@material-ui/core/Card';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {}\n  };\n});\nexport default function UpcomingEvent(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var ce2020 = props.ce2020,\n      ce2021 = props.ce2021;\n\n  var sortByMonth = function sortByMonth(arr) {\n    return arr.sort(function (a, b) {\n      return a['month'] - b['month'];\n    });\n  };\n\n  ce2020 = sortByMonth(ce2020);\n  ce2021 = sortByMonth(ce2021);\n  var upcomingEvents = ce2021.filter(function (event) {\n    return event['Status'] != 'Completed' && !event['Status'].includes('Can');\n  });\n  var pastEvents = ce2020.concat(ce2021);\n  pastEvents = pastEvents.filter(function (event) {\n    return event['Status'].includes('Comp');\n  });\n  pastEvents = pastEvents.sort(function (a, b) {\n    return b['month'] - a['month'];\n  });\n  var completed20 = ce2020.filter(function (event) {\n    return event['Status'].includes('Comp');\n  }).length;\n  var completed21 = ce2021.filter(function (event) {\n    return event['Status'].includes('Comp');\n  }).length;\n  return (\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: upcomingEvents.length ? 6 : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, upcomingEvents.length ?\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginBottom: '-.8rem',\n      with: '100%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      width: '100%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      className: classes.subtitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"Next Event\"),\n    /*#__PURE__*/\n    React.createElement(Box, {\n      marginTop: 4,\n      width: '100%',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableContainer, {\n      padding: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Date\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Class\"),\n    /*#__PURE__*/\n    React.createElement(TableCell, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Status\"))),\n    /*#__PURE__*/\n    React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, upcomingEvents.slice(0, 1).map(function (row) {\n      return (\n        /*#__PURE__*/\n        React.createElement(TableRow, {\n          key: row['Date'],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        },\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.tableItem,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 23\n          }\n        }, row['Date']),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.tableItem,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }\n        }, row['Class']),\n        /*#__PURE__*/\n        React.createElement(TableCell, {\n          className: classes.tableItem,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 23\n          }\n        }, row['Status']))\n      );\n    }))))))) : null)\n  );\n}","map":{"version":3,"sources":["/Users/jakobbellamy/Dev/refactor/Report-Cards/src/Report Card/src/Components/Continuing Education/UpcomingEvent.js"],"names":["React","makeStyles","Grid","Box","Typography","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Card","useStyles","theme","root","UpcomingEvent","props","classes","ce2020","ce2021","sortByMonth","arr","sort","a","b","upcomingEvents","filter","event","includes","pastEvents","concat","completed20","length","completed21","subtitle","tableHead","slice","map","row","tableItem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Card from '@material-ui/core/Card';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {}\n}));\n\nexport default function UpcomingEvent(props) {\n  const classes = useStyles();\n  let { ce2020, ce2021 } = props;\n\n  const sortByMonth = (arr) => {\n    return arr.sort((a, b) => {\n      return a['month'] - b['month'];\n    });\n  };\n\n  ce2020 = sortByMonth(ce2020);\n  ce2021 = sortByMonth(ce2021);\n\n  let upcomingEvents = ce2021.filter(event => {\n    return event['Status'] != 'Completed' && !event['Status'].includes('Can')\n  })\n\n  let pastEvents = ce2020.concat(ce2021)\n  pastEvents = pastEvents.filter(event => {\n    return event['Status'].includes('Comp')\n  })\n  pastEvents = pastEvents.sort((a, b) => {\n    return b['month'] - a['month'];\n  })\n\n  let completed20 = ce2020.filter(event => event['Status'].includes('Comp')).length\n  let completed21 = ce2021.filter(event => event['Status'].includes('Comp')).length\n  return (\n    <Grid item xs={upcomingEvents.length ? 6 : 0}>\n      {upcomingEvents.length ? (\n        <Box marginBottom={'-.8rem'} with={'100%'}>\n          <Card width={'100%'}>\n\n          <Typography className={classes.subtitle}>\n            Next Event\n          </Typography>\n          <Box marginTop={4} width={'100%'}>\n            <TableContainer padding={20} >\n              <Table >\n                <TableHead>\n                  <TableRow>\n                    <TableCell className={classes.tableHead}>Date</TableCell>\n                    <TableCell className={classes.tableHead}>Class</TableCell>\n                    <TableCell className={classes.tableHead}>Status</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {upcomingEvents.slice(0, 1).map(row => (\n                    <TableRow key={row['Date']}>\n                      <TableCell className={classes.tableItem}>{row['Date']}</TableCell>\n                      <TableCell className={classes.tableItem}>{row['Class']}</TableCell>\n                      <TableCell className={classes.tableItem}>{row['Status']}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n          </Card>\n\n        </Box>\n      ) : null}\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}